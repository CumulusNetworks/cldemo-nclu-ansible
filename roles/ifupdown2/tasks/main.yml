{% set intvars = interfaces[ansible_hostname] %}


# This task configures /etc/network/interfaces on ifupdown2. The variables for
# which interfaces are neighbors and networks come from the group_vars/all file.
- name: configure networking
  nclu:
      atomic: "configure all the newtorking"
      template: |

          add interface eth0 address dhcp
          add loopback lo address {{ intvars.loopback }}/32

          {% for iface in intvars.neighbors %}
          add interface {{ iface }}
          {% endfor %}

          {% for network in intvars.networks | default(()) %}
          {% for port in intvars.networks[network].ports %}
          add interface {{ port }}

          {% endfor %}
          add interface {{ network }} bridge-ports {{ " ".join(intvars.networks[network].ports) }}
          add interface {{ network }} address {{ intvars.networks[network].ip }}
          {% endfor %}


          add router bgp {{ intvars.asn }}
          add bgp router-id {{ intvars.loopback }}
          add bgp network {{ intvars.loopback }}/32
          {% for network in networks %}
          {% if networks[network].source == ansible_hostname %}
              add bgp network {{ network }}
          {% endif %}
          {% endfor %}

          add bgp maximum-paths 64
            add bgp bestpath as-path multipath-relax
             add bgp bestpath compare-routerid
             add bgp neighbor fabric peer-group
             add bgp neighbor fabric description Internal Fabric Network
             add bgp neighbor fabric capability extended-nexthop
             add bgp neighbor fabric advertisement-interval 0
             add bgp neighbor fabric timers 1 3
             add bgp neighbor fabric timers connect 3
             add bgp neighbor fabric remote-as external
             add bgp neighbor fabric prefix-list dc-fabric-in in
             add bgp neighbor fabric prefix-list dc-fabric-out out
             net add bgp ipv6 unicast neighbor fabric activate
            {% for neighbor in intvars.neighbors %}
                add bgp neighbor {{ neighbor }} peer-group fabric
                net add bgp ipv6 unicast neighbor {{ neighbor }} activate
            {% endfor %}

            add ip prefix-list dc-fabric-in seq 10 permit 0.0.0.0/0
            add ip prefix-list dc-fabric-in seq 20 permit 10.0.0.0/24 le 32
            add ip prefix-list dc-fabric-out seq 500 deny any

            {% for network in networks %}
            {% if networks[network].source != ansible_hostname %}
            add ip prefix-list dc-fabric-in seq {{ loop.index*10 + 100 }} permit {{ network }}
            {% endif %}
            {% endfor %}
            add ip prefix-list dc-fabric-in seq 500 deny any
            add ip prefix-list dc-fabric-out seq 10 permit 10.0.0.0/24 le 32
            {% for network in networks %}
            {% if not intvars.get('networks', None) or networks[network].source == ansible_hostname %}
            add ip prefix-list dc-fabric-out seq {{ loop.index*10 + 100 }} permit {{ network }}
            {% endif %}
            {% endfor %}

#
